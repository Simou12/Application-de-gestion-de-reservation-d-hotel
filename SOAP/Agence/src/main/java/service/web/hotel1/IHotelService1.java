
package service.web.hotel1;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IHotelService1", targetNamespace = "http://serviceWeb1/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IHotelService1 {


    /**
     * 
     * @return
     *     returns java.util.List<service.web.hotel1.Hotel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotelList", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.GetHotelList")
    @ResponseWrapper(localName = "getHotelListResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.GetHotelListResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/getHotelListRequest", output = "http://serviceWeb1/IHotelService1/getHotelListResponse")
    public List<Hotel> getHotelList();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setHotelList", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.SetHotelList")
    @ResponseWrapper(localName = "setHotelListResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.SetHotelListResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/setHotelListRequest", output = "http://serviceWeb1/IHotelService1/setHotelListResponse")
    public void setHotelList(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Hotel> arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns service.web.hotel1.Hotel
     * @throws HotelNotFound_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotelByName", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.GetHotelByName")
    @ResponseWrapper(localName = "getHotelByNameResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.GetHotelByNameResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/getHotelByNameRequest", output = "http://serviceWeb1/IHotelService1/getHotelByNameResponse", fault = {
        @FaultAction(className = HotelNotFound_Exception.class, value = "http://serviceWeb1/IHotelService1/getHotelByName/Fault/HotelNotFound")
    })
    public Hotel getHotelByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws HotelNotFound_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkAgencePartenaire", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.CheckAgencePartenaire")
    @ResponseWrapper(localName = "checkAgencePartenaireResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.CheckAgencePartenaireResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/checkAgencePartenaireRequest", output = "http://serviceWeb1/IHotelService1/checkAgencePartenaireResponse")
    public boolean checkAgencePartenaire(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ajouteAgencePartenaire", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.AjouteAgencePartenaire")
    @ResponseWrapper(localName = "ajouteAgencePartenaireResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.AjouteAgencePartenaireResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/ajouteAgencePartenaireRequest", output = "http://serviceWeb1/IHotelService1/ajouteAgencePartenaireResponse")
    public boolean ajouteAgencePartenaire(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "printChambreDispo", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.PrintChambreDispo")
    @ResponseWrapper(localName = "printChambreDispoResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.PrintChambreDispoResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/printChambreDispoRequest", output = "http://serviceWeb1/IHotelService1/printChambreDispoResponse")
    public String printChambreDispo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        int arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        int arg6);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listChambreDispoService", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.ListChambreDispoService")
    @ResponseWrapper(localName = "listChambreDispoServiceResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.ListChambreDispoServiceResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/listChambreDispoServiceRequest", output = "http://serviceWeb1/IHotelService1/listChambreDispoServiceResponse")
    public List<String> listChambreDispoService(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "printHotel", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.PrintHotel")
    @ResponseWrapper(localName = "printHotelResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.PrintHotelResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/printHotelRequest", output = "http://serviceWeb1/IHotelService1/printHotelResponse")
    public String printHotel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        NombreEtoile arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        int arg6);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verifChambreType", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.VerifChambreType")
    @ResponseWrapper(localName = "verifChambreTypeResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.VerifChambreTypeResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/verifChambreTypeRequest", output = "http://serviceWeb1/IHotelService1/verifChambreTypeResponse")
    public boolean verifChambreType(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verifChambreDispo", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.VerifChambreDispo")
    @ResponseWrapper(localName = "verifChambreDispoResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.VerifChambreDispoResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/verifChambreDispoRequest", output = "http://serviceWeb1/IHotelService1/verifChambreDispoResponse")
    public boolean verifChambreDispo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "updateR", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.UpdateR")
    @ResponseWrapper(localName = "updateRResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.UpdateRResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/updateRRequest", output = "http://serviceWeb1/IHotelService1/updateRResponse")
    public void updateR(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "updateC", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.UpdateC")
    @ResponseWrapper(localName = "updateCResponse", targetNamespace = "http://serviceWeb1/", className = "service.web.hotel1.UpdateCResponse")
    @Action(input = "http://serviceWeb1/IHotelService1/updateCRequest", output = "http://serviceWeb1/IHotelService1/updateCResponse")
    public void updateC(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

}
